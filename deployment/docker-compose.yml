services:
  gin-app:
    hostname: apptest
    build:
      context: ../
      dockerfile: ./cmd/gin_app/Dockerfile 
    ports:
      - "8080:8080" 
    volumes:
      - ../metrics_data:/app/metrics_data:rw  
    environment:
      - GIN_MODE=release
    deploy:
      resources:
        limits:
          cpus: "1.0"        
          memory: 1g         
    networks:
      - test-network

  fiber-app:
    hostname: apptest
    build: ./apps/fiber-app
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - test-network

  prometheus:
    container_name: test-prometheus
    hostname: testprom
    image: prom/prometheus:latest
    volumes:
      - ../config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - test-network

  cadvisortest:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisortest
    hostname: cadvisortest
    ports:
      - "8081:8080" # 8081 - порт на хосте (вашей машине) 8080 - порт внутри контейнера
      # компьютер -> 8081 -> 8080 -> приложение на порту 8080
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      # - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro
      # - /mnt/windows_docker/:/rootfs/var/lib/docker:ro # особенность wsl
      - /mnt/windows_docker:/var/lib/docker:ro
      - /mnt/windows_docker:/rootfs/var/lib/docker:ro
    networks:
      - test-network

      
  # benchmark-runner:
  #   build: ./benchmark 
  #   volumes:
  #     - ./results:/app/results
  #   depends_on:
  #     - gin-app
  #     - fiber-app
  #   environment:
  #     - GIN_URL=http://gin-app:8080
  #     - FIBER_URL=http://fiber-app:8080

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./grafana/datasources:/etc/grafana/provisioning/datasources
  #   depends_on:
  #     - prometheus

networks:
  test-network:
    driver: bridge
    name: test-network

volumes:
  prometheus_data:
  grafana_data: